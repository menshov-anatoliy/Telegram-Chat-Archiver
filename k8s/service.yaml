apiVersion: v1
kind: Service
metadata:
  name: telegram-archiver
  namespace: telegram-archiver
  labels:
    app.kubernetes.io/name: telegram-archiver
    app.kubernetes.io/component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: telegram-archiver
    app.kubernetes.io/component: archiver

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: telegram-archiver
  namespace: telegram-archiver
  labels:
    app.kubernetes.io/name: telegram-archiver
    app.kubernetes.io/component: service-account
automountServiceAccountToken: false

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: telegram-archiver
  namespace: telegram-archiver
  labels:
    app.kubernetes.io/name: telegram-archiver
    app.kubernetes.io/component: rbac
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: telegram-archiver
  namespace: telegram-archiver
  labels:
    app.kubernetes.io/name: telegram-archiver
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: telegram-archiver
  namespace: telegram-archiver
roleRef:
  kind: Role
  name: telegram-archiver
  apiGroup: rbac.authorization.k8s.io