version: '3.8'

services:
  telegram-archiver:
    build:
      context: ./Telegram-Chat-Archiver
      dockerfile: Telegram.HostedApp/Dockerfile
      args:
        BUILD_CONFIGURATION: Release
        BUILD_VERSION: latest
    container_name: telegram-archiver
    restart: unless-stopped
    environment:
      # Telegram Configuration
      - TelegramConfig__ApiId=${TELEGRAM_API_ID}
      - TelegramConfig__ApiHash=${TELEGRAM_API_HASH}
      - TelegramConfig__PhoneNumber=${TELEGRAM_PHONE_NUMBER}
      
      # Bot Configuration
      - BotConfig__BotToken=${TELEGRAM_BOT_TOKEN}
      - BotConfig__AdminUserId=${TELEGRAM_ADMIN_USER_ID}
      
      # Archive Configuration
      - ArchiveConfig__TargetChat=${TELEGRAM_TARGET_CHAT}
      - ArchiveConfig__ErrorNotificationChat=${TELEGRAM_ERROR_NOTIFICATION_CHAT}
      - ArchiveConfig__ArchiveIntervalMinutes=60
      - ArchiveConfig__ReportIntervalMinutes=1440
      - ArchiveConfig__MaxMessagesPerFile=1000
      - ArchiveConfig__BatchSize=100
      - ArchiveConfig__EnableIncrementalSync=true
      - ArchiveConfig__EnableLazyMediaDownload=false
      - ArchiveConfig__UserCacheSize=10000
      - ArchiveConfig__EnableIndexGeneration=true
      - ArchiveConfig__EnableAutoTagging=true
      - ArchiveConfig__MaxRetryAttempts=3
      - ArchiveConfig__BaseRetryDelayMs=1000
      
      # Logging Configuration
      - Serilog__MinimumLevel__Default=Information
      - DOTNET_ENVIRONMENT=Production
      
    volumes:
      # Persistent data volumes
      - telegram-archiver-archives:/app/archives
      - telegram-archiver-media:/app/media
      - telegram-archiver-logs:/app/logs
      - telegram-archiver-data:/app/data
      
      # Configuration override (optional)
      - ./appsettings.production.json:/app/appsettings.Production.json:ro
      
    ports:
      - "8080:8080"  # Для веб-интерфейса (когда будет добавлен)
      
    networks:
      - telegram-archiver-network
      
    healthcheck:
      test: ["CMD", "dotnet", "/app/Telegram.HostedApp.dll", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    # Resource limits для production
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
          
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"

  # Prometheus для мониторинга (опционально)
  prometheus:
    image: prom/prometheus:latest
    container_name: telegram-archiver-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - telegram-archiver-network
    profiles:
      - monitoring

  # Grafana для визуализации (опционально)
  grafana:
    image: grafana/grafana:latest
    container_name: telegram-archiver-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - telegram-archiver-network
    profiles:
      - monitoring
    depends_on:
      - prometheus

networks:
  telegram-archiver-network:
    driver: bridge

volumes:
  telegram-archiver-archives:
    driver: local
  telegram-archiver-media:
    driver: local
  telegram-archiver-logs:
    driver: local
  telegram-archiver-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local