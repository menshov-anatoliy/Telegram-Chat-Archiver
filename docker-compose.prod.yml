version: '3.8'

services:
  telegram-archiver:
    image: ghcr.io/menshov-anatoliy/telegram-chat-archiver:latest
    container_name: telegram-archiver-prod
    restart: unless-stopped
    
    environment:
      # Telegram Configuration
      - TelegramConfig__ApiId=${TELEGRAM_API_ID}
      - TelegramConfig__ApiHash=${TELEGRAM_API_HASH}
      - TelegramConfig__PhoneNumber=${TELEGRAM_PHONE_NUMBER}
      
      # Bot Configuration  
      - BotConfig__BotToken=${TELEGRAM_BOT_TOKEN}
      - BotConfig__AdminUserId=${TELEGRAM_ADMIN_USER_ID}
      
      # Archive Configuration
      - ArchiveConfig__TargetChat=${TELEGRAM_TARGET_CHAT}
      - ArchiveConfig__ErrorNotificationChat=${TELEGRAM_ERROR_NOTIFICATION_CHAT}
      - ArchiveConfig__ArchiveIntervalMinutes=${ARCHIVE_INTERVAL_MINUTES:-60}
      - ArchiveConfig__ReportIntervalMinutes=${REPORT_INTERVAL_MINUTES:-1440}
      - ArchiveConfig__MaxMessagesPerFile=${MAX_MESSAGES_PER_FILE:-1000}
      - ArchiveConfig__BatchSize=${BATCH_SIZE:-100}
      - ArchiveConfig__EnableIncrementalSync=${ENABLE_INCREMENTAL_SYNC:-true}
      - ArchiveConfig__EnableLazyMediaDownload=${ENABLE_LAZY_MEDIA_DOWNLOAD:-false}
      - ArchiveConfig__UserCacheSize=${USER_CACHE_SIZE:-10000}
      - ArchiveConfig__EnableIndexGeneration=${ENABLE_INDEX_GENERATION:-true}
      - ArchiveConfig__EnableAutoTagging=${ENABLE_AUTO_TAGGING:-true}
      - ArchiveConfig__MaxRetryAttempts=${MAX_RETRY_ATTEMPTS:-3}
      - ArchiveConfig__BaseRetryDelayMs=${BASE_RETRY_DELAY_MS:-1000}
      
      # Logging Configuration
      - Serilog__MinimumLevel__Default=${LOG_LEVEL:-Information}
      - DOTNET_ENVIRONMENT=Production
      
    volumes:
      - /opt/telegram-archiver/archives:/app/archives
      - /opt/telegram-archiver/media:/app/media
      - /opt/telegram-archiver/logs:/app/logs
      - /opt/telegram-archiver/data:/app/data
      - /opt/telegram-archiver/appsettings.production.json:/app/appsettings.Production.json:ro
      
    ports:
      - "127.0.0.1:8080:8080"  # Bind только на localhost для безопасности
      
    networks:
      - telegram-archiver-prod
      
    healthcheck:
      test: ["CMD", "dotnet", "/app/Telegram.HostedApp.dll", "--health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    # Production resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        
    # Restart policy
    restart: unless-stopped
    
    # Labels for monitoring
    labels:
      - "com.telegram-archiver.service=main"
      - "com.telegram-archiver.environment=production"

  # Nginx reverse proxy для SSL termination и security
  nginx:
    image: nginx:alpine
    container_name: telegram-archiver-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
      
    volumes:
      - /opt/telegram-archiver/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /opt/telegram-archiver/nginx/ssl:/etc/nginx/ssl:ro
      - /opt/telegram-archiver/logs/nginx:/var/log/nginx
      
    networks:
      - telegram-archiver-prod
      
    depends_on:
      - telegram-archiver
      
    security_opt:
      - no-new-privileges:true
      
    labels:
      - "com.telegram-archiver.service=proxy"
      - "com.telegram-archiver.environment=production"

  # Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    container_name: telegram-archiver-prometheus-prod
    restart: unless-stopped
    
    ports:
      - "127.0.0.1:9090:9090"
      
    volumes:
      - /opt/telegram-archiver/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /opt/telegram-archiver/monitoring/rules:/etc/prometheus/rules:ro
      - prometheus-prod-data:/prometheus
      
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=720h'  # 30 days
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      
    networks:
      - telegram-archiver-prod
      
    security_opt:
      - no-new-privileges:true
      
    labels:
      - "com.telegram-archiver.service=monitoring"
      - "com.telegram-archiver.environment=production"

  # Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: telegram-archiver-grafana-prod
    restart: unless-stopped
    
    ports:
      - "127.0.0.1:3000:3000"
      
    environment:
      - GF_SECURITY_ADMIN_PASSWORD_FILE=/run/secrets/grafana_admin_password
      - GF_USERS_ALLOW_SIGN_UP=false  
      - GF_SERVER_ROOT_URL=https://monitoring.yourdomain.com
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SECURITY_COOKIE_SAMESITE=strict
      - GF_SESSION_PROVIDER=file
      - GF_SESSION_PROVIDER_CONFIG=/var/lib/grafana/sessions
      
    volumes:
      - grafana-prod-data:/var/lib/grafana
      - /opt/telegram-archiver/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - /opt/telegram-archiver/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      
    secrets:
      - grafana_admin_password
      
    networks:
      - telegram-archiver-prod
      
    depends_on:
      - prometheus
      
    security_opt:
      - no-new-privileges:true
      
    labels:
      - "com.telegram-archiver.service=dashboard"
      - "com.telegram-archiver.environment=production"

  # Log aggregation с Loki
  loki:
    image: grafana/loki:latest
    container_name: telegram-archiver-loki-prod
    restart: unless-stopped
    
    ports:
      - "127.0.0.1:3100:3100"
      
    volumes:
      - /opt/telegram-archiver/monitoring/loki.yml:/etc/loki/local-config.yaml:ro
      - loki-prod-data:/loki
      
    networks:
      - telegram-archiver-prod
      
    security_opt:
      - no-new-privileges:true
      
    labels:
      - "com.telegram-archiver.service=logging"
      - "com.telegram-archiver.environment=production"

networks:
  telegram-archiver-prod:
    driver: bridge
    name: telegram-archiver-prod
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-prod-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/telegram-archiver/data/prometheus
      
  grafana-prod-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/telegram-archiver/data/grafana
      
  loki-prod-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/telegram-archiver/data/loki

secrets:
  grafana_admin_password:
    file: /opt/telegram-archiver/secrets/grafana_admin_password